@model IEnumerable<Claim>
@{
    ViewData["Title"] = "My Claims";
    var culture = new System.Globalization.CultureInfo("en-ZA");
}

<h2>My Claims</h2>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <p class="mb-0">Track and manage your submitted claims.</p>
    <a asp-action="Create" class="btn btn-success">
        <i class="fas fa-plus"></i> Submit New Claim
    </a>
</div>

@if (!Model.Any())
{
    <div class="alert alert-info">
        You haven't submitted any claims yet. <a asp-action="Create">Submit your first claim</a>.
    </div>
}
else
{
    <div class="table-responsive">
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>Submission Date</th>
                    <th>Hours Worked</th>
                    <th>Hourly Rate</th>
                    <th>Total Amount</th>
                    <th>Status</th>
                    <th>Documents</th>
                    <th>Notes</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.SubmissionDate.ToString("dd/MM/yyyy")</td>
                        <td>@item.HoursWorked</td>
                        <td>@item.HourlyRate.ToString("C", culture)</td>
                        <td class="fw-bold text-success">@item.TotalAmount.ToString("C", culture)</td>
                        <td>
                            <span class="badge @GetStatusBadgeClass(item.Status)">@item.Status</span>
                        </td>
                        <td>
                            @if (item.SupportingDocuments.Any())
                            {
                                <span class="badge bg-info">@item.SupportingDocuments.Count</span>
                            }
                            else
                            {
                                <span class="text-muted">None</span>
                            }
                        </td>
                        <td>
                            @if (!string.IsNullOrEmpty(item.Notes))
                            {
                                <small class="text-muted">@(item.Notes.Length > 50 ? item.Notes.Substring(0, 50) + "..." : item.Notes)</small>
                            }
                            else
                            {
                                <span class="text-muted">-</span>
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

<div class="mt-3">
    <a href="@Url.Action("Index", "Home")" class="btn btn-outline-secondary">
        <i class="fas fa-arrow-left"></i> Back to Home
    </a>
</div>

@functions {
    string GetStatusBadgeClass(ClaimStatus status)
    {
        return status switch
        {
            ClaimStatus.Pending => "bg-warning",
            ClaimStatus.Approved => "bg-success",
            ClaimStatus.Rejected => "bg-danger",
            _ => "bg-secondary"
        };
    }
}